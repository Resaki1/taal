/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: soupffle (https://sketchfab.com/soupffle)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/pixel-house-fb19698f540649d58d840e7e3459c9a6
title: Pixel House
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    Pixel_House_A: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<any>();
  const { nodes, materials } = useGLTF("/gltf/house/house.gltf") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null} scale={4}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, 0.11, 0]}>
            <mesh
              geometry={nodes.Object_4.geometry}
              material={materials.Pixel_House_A}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/house.gltf");
