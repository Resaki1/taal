/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 Outpost.vox.gltf -i -t -T --shadows 
Files: Outpost.vox.gltf [328.09KB] > Outpost.vox-transformed.glb [33.67KB] (90%)
*/

import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { Vector3 } from 'three';

type GLTFResult = GLTF & {
  nodes: {
    Node: THREE.Mesh;
  };
  materials: {
    palette: THREE.MeshStandardMaterial;
  };
};

const position = new Vector3(0, -3.16, 0);

function Outpost(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/Outpost.glb') as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.08}>
      <mesh castShadow receiveShadow geometry={nodes.Node.geometry} material={materials.palette} position={position} />
    </group>
  );
}

export default Outpost;

useGLTF.preload('/glb/Outpost.glb');
